{"ast":null,"code":"import _objectSpread from \"/Users/roddy/Dev/React/class-minimal-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/roddy/Dev/React/class-minimal-app/src/index.js\";\nimport React from \"react\";\nimport { render } from \"react-dom\";\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport Counter from './counter';\nimport SomeContainer from './someContainer';\nimport \"./index.css\";\nconst initialState = {\n  count: 0\n};\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.store = createStore(this.reducer);\n  }\n\n  reducer(state = initialState, action) {\n    let newState = {};\n\n    switch (action.type) {\n      case \"INCREMENT\":\n        newState = {\n          count: action.newCount\n        };\n        break;\n\n      case \"DECREMENT\":\n        newState = {\n          count: action.newCount\n        };\n        break;\n\n      default:\n        newState = _objectSpread({}, state);\n    }\n\n    return newState;\n  }\n\n  render() {\n    return React.createElement(Provider, {\n      store: this.store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(Counter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"another-arbitrary-block\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(SomeContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nrender(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/Users/roddy/Dev/React/class-minimal-app/src/index.js"],"names":["React","render","createStore","Provider","Counter","SomeContainer","initialState","count","App","Component","store","reducer","state","action","newState","type","newCount","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAAQC,WAAR,QAA2B,OAA3B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,aAAP;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,MAAMC,GAAN,SAAkBR,KAAK,CAACS,SAAxB,CACA;AAAA;AAAA;AAAA,SAsBEC,KAtBF,GAsBUR,WAAW,CAAE,KAAKS,OAAP,CAtBrB;AAAA;;AACEA,EAAAA,OAAO,CAAEC,KAAK,GAAGN,YAAV,EAAwBO,MAAxB,EACP;AACE,QAAIC,QAAQ,GAAG,EAAf;;AAEA,YAAQD,MAAM,CAACE,IAAf;AAEE,WAAK,WAAL;AACED,QAAAA,QAAQ,GAAG;AAAEP,UAAAA,KAAK,EAAEM,MAAM,CAACG;AAAhB,SAAX;AACA;;AAEF,WAAK,WAAL;AACEF,QAAAA,QAAQ,GAAG;AAAEP,UAAAA,KAAK,EAAEM,MAAM,CAACG;AAAhB,SAAX;AACA;;AAEF;AACEF,QAAAA,QAAQ,qBAAQF,KAAR,CAAR;AAXJ;;AAcA,WAAOE,QAAP;AACD;;AAIDb,EAAAA,MAAM,GACN;AACE,WACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAKS,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,EAIE;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJF,CADF;AAUD;;AApCH;;AAuCAT,MAAM,CAAC,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,EAAUgB,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAV,CAAN","sourcesContent":["import React from \"react\";\nimport { render } from \"react-dom\";\nimport {createStore } from 'redux';\nimport {Provider} from 'react-redux';\n\nimport Counter from './counter';\nimport SomeContainer from './someContainer';\n\nimport \"./index.css\";\n\nconst initialState = { count: 0 };\n\nclass App extends React.Component\n{\n  reducer( state = initialState, action )\n  {\n    let newState = {};\n\n    switch( action.type )\n    {\n      case \"INCREMENT\":\n        newState = { count: action.newCount };\n        break;\n\n      case \"DECREMENT\":\n        newState = { count: action.newCount };\n        break;\n\n      default:\n        newState = { ...state };\n    }\n\n    return newState;\n  }\n  \n  store = createStore( this.reducer );\n\n  render()\n  {\n    return(\n      <Provider store={this.store}>\n        <div className=\"arbitrary-block\">\n            <Counter />\n        </div>\n        <div className=\"another-arbitrary-block\">\n          <SomeContainer />        \n        </div>\n    </Provider>  \n    );\n  }  \n}\n\nrender(<App />, document.getElementById(\"root\"));"]},"metadata":{},"sourceType":"module"}